name: Test, build and push Docker image

on:
  push:
    branches: [main]
    paths:
      - "Dockerfile"
      - ".github/workflows/deploy-to-docker.yaml"
      - "src/**"
      - "**/*.ts"
      - "**/*.tsx"
      - "public/**"
      - "next.config.*"
      - "tsconfig.json"
      - "vitest.config.ts"
      - "package.json"
      - "pnpm-lock.yaml"
      - "tailwind.config.ts"
      - "postcss.config.mjs"
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: docker-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

  build:
    runs-on: ubuntu-latest
    needs: [test]
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Read version from package.json
        id: ver
        run: |
          VER=$(node -p "require('./package.json').version")
          echo "version=$VER" >> $GITHUB_OUTPUT
          echo "Version: $VER"

      - name: Extract metadata for GHCR
        id: meta_ghcr
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=${{ steps.ver.outputs.version }}
            type=raw,value=latest

      - name: Extract metadata for Docker Hub
        id: meta_dh
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_USERNAME }}/parse.shenzjd.com
          tags: |
            type=ref,event=branch
            type=ref,event=tag  
            type=sha
            type=raw,value=${{ steps.ver.outputs.version }}
            type=raw,value=latest

      - name: Build and push to GHCR
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
          sbom: false
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            DEPLOYMENT_TARGET=docker
          tags: ${{ steps.meta_ghcr.outputs.tags }}
          labels: ${{ steps.meta_ghcr.outputs.labels }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v6
        if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        with:
          context: .
          push: true
          platforms: linux/amd64
          cache-from: type=gha
          provenance: false
          sbom: false
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            DEPLOYMENT_TARGET=docker
          tags: ${{ steps.meta_dh.outputs.tags }}
          labels: ${{ steps.meta_dh.outputs.labels }}
